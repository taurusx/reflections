When would you want to use a remote repository rather than keeping all your work
local?

    It is very important to keep a remote repository when you work with other 
    people. In that case any member of your team has access to the same code 
    versions or can update and merge new parts of code. You can also create a 
    remote repository if you just want to share your code to public.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    When you pull changes from the remote repository you add newly created or 
    added files that somebody else might have provided. You update then your 
    checkout branch. If this was done automatically, you could meet some problems 
    with a code you were not expecting to be there. It is much better when 
    you decide whether to pull desired branch or not. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches are commits that derive from specified parent which can be different 
    that parent on the main branch (usually called 'master'). That means you can 
    separate your branch from the main code thread and use it for testing new 
    functionality, implementing new features etc. Branches are made as a part of 
    repository but they don't necessarily become part final code if you don't
    want to merge them.
    Clones are 1:1 copy of repository which includes all necessary metadata 
    (like list of commits). You use them to start working on some version of 
    code and if you have permission you can sync with them.
    Forks are kind of GitHub clones which you can use when you don't have 
    permission to update files in another GitHub repository. This clone(fork) 
    you can use to try your own solutions, features etc. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
    
